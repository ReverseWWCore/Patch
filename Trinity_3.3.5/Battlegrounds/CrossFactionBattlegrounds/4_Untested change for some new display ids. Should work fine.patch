From 9063fe3b6e5523a502e09c581d84e4a8650856c2 Mon Sep 17 00:00:00 2001
From: Carl Hjerpe <lillecarl@gmail.com>
Date: Mon, 22 Jul 2013 22:54:46 +0200
Subject: [PATCH] Untested change for some new display ids. Should work fine

---
 src/server/game/Cfbg/Cfbg.cpp              | 70 ++++++++++++++++++------------
 src/server/game/Cfbg/Cfbg.h                |  8 ++++
 src/server/game/Entities/Player/Player.cpp |  6 ++-
 src/server/game/Entities/Player/Player.h   |  4 +-
 src/server/game/Entities/Unit/Unit.h       |  1 +
 5 files changed, 58 insertions(+), 31 deletions(-)

diff --git a/src/server/game/Cfbg/Cfbg.cpp b/src/server/game/Cfbg/Cfbg.cpp
index 68a2103..63715e9 100644
--- a/src/server/game/Cfbg/Cfbg.cpp
+++ b/src/server/game/Cfbg/Cfbg.cpp
@@ -46,9 +46,47 @@ bool Player::SendRealNameQuery()
     return true;
 }
 
-void Player::SetFakeRace()
+void Player::SetFakeRaceAndMorph()
 {
-    m_FakeRace = GetOTeam() == ALLIANCE ? RACE_BLOODELF : RACE_HUMAN;
+    if (getClass() == CLASS_DRUID)
+    {
+        if (GetOTeam() == ALLIANCE)
+        {
+            m_FakeMorph = getGender() == GENDER_MALE ? FAKE_M_TAUREN : FAKE_F_TAUREN;
+            m_FakeRace == RACE_TAUREN;
+        }
+        else if (getGender() == GENDER_MALE) // HORDE PLAYER, ONLY HAVE MALE NELF ID
+        {
+            m_FakeMorph = FAKE_M_NELF;
+            m_FakeRace == RACE_NIGHTELF;
+        }
+        else
+            m_FakeRace = GetOTeam() == ALLIANCE ? RACE_BLOODELF : RACE_HUMAN;
+    }
+    else if (getClass() == CLASS_SHAMAN && GetOTeam() == HORDE && getGender() == GENDER_FEMALE)
+    {
+        m_FakeMorph = FAKE_F_DRANAEI; // Female Draenei
+        m_FakeRace == RACE_DRAENEI;
+    }
+    else
+    {
+        m_FakeRace = GetOTeam() == ALLIANCE ? RACE_BLOODELF : RACE_HUMAN;
+
+        if (GetOTeam() == HORDE)
+        {
+            if (getGender() == GENDER_MALE)
+                m_FakeMorph = 19723;
+            else
+                m_FakeMorph = 19724;
+        }
+        else
+        {
+            if (getGender() == GENDER_MALE)
+                m_FakeMorph = 20578;
+            else
+                m_FakeMorph = 20579;
+        }
+    }
 }
 
 bool Player::SendBattleGroundChat(uint32 msgtype, std::string message)
@@ -88,32 +126,8 @@ void Player::MorphFit(bool value)
 {
     if (!IsPlayingNative() && value)
     {
-        if (GetOTeam() == HORDE)
-        {
-            if (getGender() == GENDER_MALE)
-            {
-                SetDisplayId(19723);
-                SetNativeDisplayId(19723);
-            }
-            else
-            {
-                SetDisplayId(19724);
-                SetNativeDisplayId(19724);
-            }
-        }
-        else
-        {
-            if (getGender() == GENDER_MALE)
-            {
-                SetDisplayId(20578);
-                SetNativeDisplayId(20578);
-            }
-            else
-            {
-                SetDisplayId(20579);
-                SetNativeDisplayId(20579);
-            }
-        }
+        SetDisplayId(GetFakeMorph());
+        SetNativeDisplayId(GetFakeMorph());
     }
     else
         InitDisplayIds();
diff --git a/src/server/game/Cfbg/Cfbg.h b/src/server/game/Cfbg/Cfbg.h
index 885faa0..bda4199 100644
--- a/src/server/game/Cfbg/Cfbg.h
+++ b/src/server/game/Cfbg/Cfbg.h
@@ -33,4 +33,12 @@
 
 #define LIMIT_UINT32 2147483647
 
+enum FakeMorphs
+{
+    FAKE_F_TAUREN   = 20584,
+    FAKE_M_TAUREN   = 20585,
+    FAKE_M_NELF     = 20318,
+    FAKE_F_DRANAEI  = 20323,
+};
+
 #endif
\ No newline at end of file
diff --git a/src/server/game/Entities/Player/Player.cpp b/src/server/game/Entities/Player/Player.cpp
index e1e89ee..666f002 100644
--- a/src/server/game/Entities/Player/Player.cpp
+++ b/src/server/game/Entities/Player/Player.cpp
@@ -652,6 +652,7 @@ void KillRewarder::Reward()
 
     m_FakeRace = 0;
     m_RealRace = 0;
+    m_FakeMorph = 0;
     m_ForgetBGPlayers = false;
     m_ForgetInListPlayers = false;
 
@@ -987,7 +988,7 @@ bool Player::Create(uint32 guidlow, CharacterCreateInfo* createInfo)
     
     SetORace();
     m_team = TeamForRace(getORace());
-    SetFakeRace(); // m_team must be set before this can be used.
+    SetFakeRaceAndMorph(); // m_team must be set before this can be used.
     setFactionForRace(getORace());
 
     InitDisplayIds();
@@ -17013,7 +17014,8 @@ bool Player::LoadFromDB(uint32 guid, SQLQueryHolder *holder)
 
     SetORace();
     m_team = TeamForRace(getORace());
-    SetFakeRace(); // m_team must be set before this can be used.
+    SetFakeRaceAndMorph(); // m_team must be set before this can be used.
+    SetFakeMorph();
     setFactionForRace(getORace());
 
     SetUInt32Value(UNIT_FIELD_LEVEL, fields[6].GetUInt8());
diff --git a/src/server/game/Entities/Player/Player.h b/src/server/game/Entities/Player/Player.h
index 01af7f2..25b97ec 100644
--- a/src/server/game/Entities/Player/Player.h
+++ b/src/server/game/Entities/Player/Player.h
@@ -1071,6 +1071,7 @@ class Player : public Unit, public GridObject<Player>
         bool m_ForgetInListPlayers;
         uint8 m_FakeRace;
         uint8 m_RealRace;
+        uint32 m_FakeMorph;
     public:
         typedef std::vector<uint64> FakePlayers;
         void SendChatMessage(const char *format, ...);
@@ -1079,7 +1080,8 @@ class Player : public Unit, public GridObject<Player>
         void DoForgetPlayersInBG(Battleground* pBattleGround);
         uint8 getORace() const { return m_RealRace; }
         void SetORace() { m_RealRace = GetByteValue(UNIT_FIELD_BYTES_0, 0); }; // SHOULD ONLY BE CALLED ON LOGIN
-        void SetFakeRace(); // SHOULD ONLY BE CALLED ON LOGIN
+        void SetFakeRaceAndMorph(); // SHOULD ONLY BE CALLED ON LOGIN
+        uint32 GetFakeMorph() { return m_FakeMorph; };
         uint8 getFRace() const { return m_FakeRace; }
         void SetForgetBGPlayers(bool value) { m_ForgetBGPlayers = value; }
         bool ShouldForgetBGPlayers() { return m_ForgetBGPlayers; }
diff --git a/src/server/game/Entities/Unit/Unit.h b/src/server/game/Entities/Unit/Unit.h
index 6b8a9bf..7715a8d 100644
--- a/src/server/game/Entities/Unit/Unit.h
+++ b/src/server/game/Entities/Unit/Unit.h
@@ -1340,6 +1340,7 @@ class Unit : public WorldObject
         uint8 getLevelForTarget(WorldObject const* /*target*/) const { return getLevel(); }
         void SetLevel(uint8 lvl);
         uint8 getRace(bool forceoriginal = false) const;
+        uint8 getORace() { return getRace(true); }
         uint32 getRaceMask() const { return 1 << (getRace()-1); }
         uint32 getORaceMask() const { return 1 << (getRace(true) - 1); }
         uint8 getClass() const { return GetByteValue(UNIT_FIELD_BYTES_0, 1); }
-- 
1.8.1.6
